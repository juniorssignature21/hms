# Generated by Django 5.1 on 2024-10-04 13:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bookings', '0003_alter_roomtype_type'),
        ('inventory', '0005_consumableitem_purchase_receipt_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='equipment',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.itemcategory'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.itemcategory'),
        ),
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='amenity_icons/')),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Cost for using the amenity, if applicable.', max_digits=10)),
                ('is_available', models.BooleanField(default=True, help_text='Indicates if the amenity is available for use.')),
                ('is_active', models.BooleanField(default=True, help_text='Controls if the amenity is active and visible.')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order for displaying amenities in the system.')),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Quantity available for tangible items.')),
                ('reorder_level', models.PositiveIntegerField(default=0, help_text='Stock level that triggers reorder alert for tangible items.')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='amenities', to='inventory.itemcategory')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amenities', to='bookings.hotel')),
                ('supplier', models.ForeignKey(blank=True, help_text='Supplier of this amenity.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
            ],
            options={
                'ordering': ['display_order', 'name'],
            },
        ),
    ]
